%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.15.4 (Build 19E266) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1440 1024
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1440 1024
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: SEYXRZ+Futura-Medium
%!FontType1-1.0: SEYXRZ+Futura-Medium 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
14 dict begin
/FontName /SEYXRZ+Futura-Medium def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /T put
dup 34 /h put
dup 35 /i put
dup 36 /s put
dup 37 /space put
dup 38 /t put
dup 39 /a put
dup 40 /g put
dup 41 /e put
dup 42 /m put
dup 43 /p put
dup 44 /o put
dup 45 /r put
dup 46 /n put
dup 47 /c put
dup 48 /f put
dup 49 /y put
dup 50 /u put
dup 51 /less put
dup 52 /greater put
dup 53 /x put
dup 54 /slash put
dup 55 /d put
dup 56 /b put
dup 57 /M put
dup 58 /O put
dup 59 /S put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1074 1 index div -591 2 index div 2707 3 index div 2164 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 30 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/slash 3 def
/less 4 def
/greater 5 def
/M 6 def
/O 7 def
/S 8 def
/T 9 def
/a 10 def
/b 11 def
/c 12 def
/d 13 def
/e 14 def
/f 15 def
/g 16 def
/h 17 def
/i 18 def
/m 19 def
/n 20 def
/o 21 def
/p 22 def
/r 23 def
/s 24 def
/t 25 def
/u 26 def
/x 27 def
/y 28 def
/hbar 29 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-1074 -591 2707 2164} readonly def
/UniqueID 4208071 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68263D9BC79CC22555FC30C8CC45F0EA62BE566E448B059131B256DCB46C4BD6FA4EC904B604BBDDA2E4322C05285155FA645EA679F789B3965BA0CDF9AA5999E8534283AAC4798A8F08B07EC151EE0F00E1F7C749DA9D7730E853DCB56868233F92BFABAEA281C87E23A1954A8201C29E14A55F105F1F62034C502A46363637ED60A86D48D4B1F8F2E2274D72D1510A11CD3CDA15E001CEFBAA37B755AA6E5C9CE32BF4EFD3F4BFCC15342523DB864306B820FF7D13287D23F5644363633A4E579B31EF41D545A6E70455F0AD6F8A07A5EBFFBECA0EC950873D1AEDA3205E08822E5A87A6DC40156D155BF9E241D737358E254D2BB7C4F2373926DE68DFA54D6CCFAAD3701E48470D7CACD0F8CC1250F6DACA171976B4A352FE2801F2EDE3B447086FC90DB7DD41D0A6E3B048CDB33228354424311D74AADF0B2E33B7E5F490A83F41FFE59765175F04ECE86FF45C6AA1045B181C944C14559DE33C244BD00F58CCDF4CBC43492775B43C69501EC1881E2E1C65A49FC01BF364FB83D1C71EFD27AF69D4C734DD7C2685420AEAF6C84A0797435EAA39CAE01E81605AA1BB11771F2678220E8207A4F31A1335F8115C48B354AFBBCED0845125F6F5B23D3F2A2909761904B58FBE4215F8D0727F48F26C89B7E78137386F9B7F761DCC9976D7839CBACA37A694D50B48C513A914C61749F3ABCC95C7040AB170B434921AE6C491B4F51E0670743BD5446AD2D4657CE46C7DA00364AC2969D04E2DE5BA64C25DA8FD10B41612AD8F7707FF79D64E94EFC4B2EBA5EF8819627A34EB8CA9AEB333D19DDB416E1

585789B6DD81480EF228C1EE9978ABEC7C8B28299BD33047F3999865BD645323F510B2763AEE015D469D00B5DC372EA00F33A986A630924288AC6D7F6EF088A2A2AFD23DDEB5DBFDDD13C55A87439EF64459E59C8C1FB68AF048BF9CAD59480F86B02B183A8C0E4FB68BABE9C7BBAA4ADC244C646A96B84C8FEBC1715D1A3D6104491A93B86A36BA6650AB2498D28ECA48293235C7D1CEE4B8A8556ED594FF86384B7F31DE6F797B1592509B7BABF58D83209229E6E844078ACB897EA172820D5D4050591E9D9C3C3367CC69120ED6E7633336F334A09A3C61BC9DF75E959B8F6502BF76403162FB05258AC01BAEBD4129560F4B4F8C5DD435690434D2A50C77C2BDD561B94144D6E3AED85861E0AEEDE1F863B0F6B83EAD5031A34BE5B93345E20BA71527C960BEDF2CE208D288A040AB504220103CAEBE37A395254FF7A98ABB3E2343977C85FB0BC1D36B7C6AB8F7C49C89610A904C9917A34DF71515971F87CDE6C4818F1BA8EA176B81880CDC724B9877492F1CF6515215AC8431E2090B356CBE446CD725E3976170749A2F27C0105E6BF841BD8CC59A73D1800BFA1F4E14226F41D5A7231626F286169856EA832B9BC1A7E597901BEC6AD8A07278BC6EE3A80B6DB1B8E4D2C10C13DE41C48DE3983802C87D22C6B824E6EAF2DB374DDBB66ED8450AC8C897FA59A43292CAF204679F99D2F567E07BC1BC3CBBF1E3C80ABD68525D6BE94F160CB45CB76407F16AD22A6C79DF854F814B4B3ED9C3599988EFC3BD81AC8E6A63C0725514808BDC64155E61CB6A2A615CDAAB597B593E562C57386F5BA7305D54A0DDBB67626588B8B3004DA34F3765B43DDC135EBB2AA4B07FA9AF163C7315FE0CFE71A66A64AC267CC0D7063F30A2FED3FE05148149319D666CB5A707FF5A761531EE23177C00C172B4E751D350B868BE4A55011EA37CE9E20F90D4907AB4A2518D95BF881A26D6BFA5DE13275BDF1145648D12F4C937C3A43B907581978E69547374DCB847B671CE3F20FE5EEC9370031D53F3E6192DB5BAAE061259E6597532973975747A3579F9D0361C93C55116C31D08B415A401EC0F2B88C86B6FC4A8DD8852E7889B089D9B238E223B7D071CCE61BF14B23BDCC6CBF86A2663766F852732290272DCBD7BAC9F32F571C6BB3957217C64B1BA366D801EAD1B7D6A25E914EFBB6B7A302DE4E6D6E31272407AFFA7C21A125285783CB23268D2EF0F7F30D371122EE1DE2F3758688C4A03CD9E93E262626987FC6DEFBA3AA5378AD5E2047CDB5E1AD754ABC2EF0A65ECFDB88DCB760ADA250C01B047D4B81DCB39AEB9ABA7B33E4CA6AD81C74B68977B5FFAF24CC22123FEDB5ECF433F893DB9C4F25F06CBA0F2E38EF197CC0165D008863C9BBD25F4071D3D4D897D9DA7AE2F3399A3156E0AD035195D3247E43E8E0561B8815D887A4669B640211A
9ED0934A5F23787BC3AE76A0F197B0A1D00ECC59B7868F222B996059631CBAB52A52EE08742E6D853B081A1D01B1B83AA1B9C4C555EEE346E48D7DB740E07CB4FED62A0219B8040540837BB57C9126E93424D36D62988CE564325FECCADB15C73BB32D7907595DF7EA0C8284D412264A49A57A401E820675CDCFD9AA5DFE40B6FE1557C47CA6689591AC62463240A0F08FC28753CEA67A99B4E39D8DF845754F27657B87DDD58683F6799FCCB396AD7566E83EF0569DCD6279B5C2833F38FD29011763CA084A3762F9B340243C3661BBD0E4DEAB9DEDB0D599CC4187FC048AA06F907789A6F2BA8A6ED1CA1D1D7DDF5C67BE6CF694E552F0AD38024E8E105AD70A01F7843C67120339B71AB68FC5A5146F685D07F4831CFCA192BBA88A725C1B12386D434F8AF98F4ABB46116A6D2BFFF0C666923D73282CE7BDF9348B221E6B9A44CFA8BB9CD05511D04C188FDBB0DD4718CE0D5004DFD556E3C258E95CF438F01CB9D3C8478745F5A165935ED83ECDFB40E5E0F20E27A3A95EEB393359D111132F3D12287F6B855E1DD1FE567004D02476E62D1B95F3677E022B096F6514978B8F5773C6F8BC2302ED7FFD28BF47769933D2E723D28B3C39AEA7911866714E7CBB8668E05DD97E177EE9C2A1487584EE3E9CFCC137B68769D588E76196944B9411D68CF37936119EAD80235AC118AFB2C0408436A571256C3EF358A9A35442C0F135253D515D229D199346B2BB71C70DC969545039D2C1B3EC15EBD836E5BCC4F79F71E30E127F38DCA6C7D0BE33FDFB711AB63A1A7205BDC10572711B6508D8E15AA1935446DCAE0CD79BCEC27B0E213F51D21BA57123112DFC87021F4EBE0039F2745F6393094F5883E109A75F6C3DCB415DF66EF7977F9451BB120A30E79BD8F00A424D497FAEF9D84A392FCA49C679ED7577C205E9A9415FC5C8F0E5F57D198793D214DC7637244823C7A68CD7A950701195E61AFB7E3DE1CF2178D9D97B2038A3BBE7AEC8E6FD6501DA99A18473B08953C1635F974D57658DB2B9045C2A9926270F66AA0DAE34DAF9AC7560BCBD2BC2C1211B5F73E1CF48A4FD83E909CEBBD54643E11B8E834944D00F21DBBB7DAC9F9FB8ACF7E78FD4ADC1AD71AA17FB6F8D65482183D1E392817EA446D5EA02D70D4F2451B818C3EB6C505EA87CFCE16EF5DA614EC8040BAF4EED87CE9E746A2D7FDBE08A3A205B351FFF7360E3D790D492E951AB21C56DE194BBC646E7FB95DC2A709BA5354AD2CD3A3A14E34C1E2AD7177306B3F816B6FD1589596764A04A5A0E1B712249A6171861AB06ACB6CBD1E704B4E3CEC61D6149DB3BA604468703
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/SEYXRZ+Futura-Medium cguidfix
/F1.1/SEYXRZ+Futura-Medium renmfont
%RBIBeginFontSubset: AFRFXX+Futura-Bold
%!FontType1-1.0: AFRFXX+Futura-Bold 1.0000.2.0010
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin
/FontName /AFRFXX+Futura-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /C put
dup 34 /o put
dup 35 /d put
dup 36 /e put
dup 37 /space put
dup 38 /s put
dup 39 /a put
dup 40 /m put
dup 41 /p put
dup 42 /l put
dup 43 /less put
dup 44 /t put
dup 45 /r put
dup 46 /n put
dup 47 /g put
dup 48 /greater put
dup 49 /slash put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -227 1 index div -344 2 index div 1459 3 index div 1099 5 -1 roll div]cvx def
/sfnts [<


00>] def
/CharStrings 19 dict dup begin
/.notdef 0 def
/space 1 def
/slash 2 def
/less 3 def
/greater 4 def
/C 5 def
/a 6 def
/d 7 def
/e 8 def
/g 9 def
/m 10 def
/n 11 def
/o 12 def
/p 13 def
/r 14 def
/s 15 def
/l 16 def
/t 17 def
/anoteleia 18 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-227 -344 1459 1099} readonly def
/UniqueID 4364665 def
currentdict end
currentfile eexec



A9071AD1F6CE290D98410323DA7E19E6090209FE7A32A346C3D891E8EB5707112C79118AC0AA5BF1C72B14452F6B7B8DD58504FFF2E8A55BFEAC30DB0591860C103D9305D78E502A0BC995289782A28E1C355141E531A97D5385693ED3BFFD28EAE0D51FA7B43461C18CF5CE66D5F06B945E1D809DC22AC12A7FE221497BCDB5169454E218354464685E0136F781BC1D8DCA37FD6B6AB7E94AB6DF6C880ABB24815A8EEFDF313F963C1A7233AFC81987A3DB93E03122B85BF5499C967B9F843B3B8B0576FCBFE7078F60590C0F8A0E6EF3501D60D79A5A7A0F8336DBA26523B65C10E62545261F8CBE3A676F9275582EB58FD1CA9E16DB5082F1DD273F73853E0FC5A9B5282D7386
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/AFRFXX+Futura-Bold cguidfix
/F2.1/AFRFXX+Futura-Bold renmfont
%RBIBeginFontSubset: PIQNWM+Connection
%!FontType1-1.0: PIQNWM+Connection 0.2%%CreationDate: 4/12/20% Copyright 2020 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (0.2) readonly def/FullName (Connection) readonly def/FamilyName (Connection) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -125 def/UnderlineThickness 50 defend readonly def/FontName /PIQNWM+Connection def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /s putdup 34 /t putdup 35 /a putdup 36 /r putdup 37 /space putdup 38 /o putdup 39 /v putdup 40 /e putdup 41 /p putdup 42 /i putdup 43 /n putdup 44 /x putreadonly def/FontBBox {50 -300 1150 800} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F183746CED7CBF1DC6F921FE8926D6D59231A99AB9A76C68DA75D341BDD5ECC2B257A86C64156282B17A949D4E0E13A8E45D8AE5D54B4AC7773E7C225175262C90D6FD8B5093BE930B0F90F22742C1307B00E5B7E6140128653763D65BB631BEC0F28F6A2DB2EF0481D556439BD02E71F4DEE7B697FD0A603589B0862BA85EE77B75A872191C6BAB66BFDC5E049958C6BB81F2EA671363532F00891BBC2578D3A077990C7063E0C84198A9665A5736D8E03339D9CDB183AA7941ADB07C63821CEAC1E5B11DCCA3711543792C6294B756E0E50E083017CD7D5492A89B601ECF59E689A6226E4DC81D0A9FF19A6663707D74765335730AB969A0A4D4A8913FAFCCFF45FE5C30E01DD9000E9CF14A263CF268BB74A5AA8B8661A18F808C6D4D87D4877C45CFA20F1B040CF2B39FD476E81F3BCC2931666DDB2A91AFD3CF829DCF1C9A5000DECEE9690052C9280B2F309A88C22F03F04BE6F7C61B2ACF283A1A3F9E55DAA8787568B3B9EBE27367145A9EF328FA597B940431A5251FD13308CDF1B33C59219FF5F0BBDC961F367040DE78A9D612B74E2624B3CC799E982260ECFC7800E5A4580CF3EE919A59BE34477640E8C6E5FA39027E1FD4E534BDEA57E0C3CBA250AD2BDF559E05D7250A575E69AC3CDD4EF0CE6FFF33E27484A8EBE8E55A6F318999F30E2BFFA5D419F474A8000C6E2900878D40280F498186E6476EFBD936CD2845B40C1A84DCCFFF94D74FE599ED35FE25EC71EC10C69AC5B5EDB839A1027DA606D36DAB827E3FDACC7E7EB17EB9A1957C3FFC5BE00928AF05A50F2A22D572749E632C94C8F2EDE353F49526E6F6951E55D49AC62A212ACF77C7810D59F60CFC42F3C460420AC003E3BA99705F9A390A501469717CEE6DA7694871F756E81DE84BB0A5286B18C46C92FA3DE82CC09C7B9D8491DCE585CB03CD88ABDD4D9312A20FB861631F6BB5C68A610ABF9BC213B984B549B1763389E3EAD9161537A8488D1483EE578E2EB18250CB85B7530BC3DD44CED6329693C7292689BB59FB0FF10C9FC2D8167A154217422A644F62E9CBC8AC4E4DF433A876169506BDC876B877889DC5C7A16A88C0C11634DF8773089D96EA86EFB2E5AC0098D3BE23A0E06AAD9E22C3A79024C1369C681DD457E87F2C8CFE32691CE6EA4AB32985D765AD1702449C070B35F754830C75075CCE949D3657F77E5C5C68E3F80C7759500162606DF4CE93ED97A13BFE749DBA43053C0B0B6206789F028C8AE17A11C655C23EA30E6D1488543E3E03A64268FE9568FB6BFA026E7DAF7C86EB88AD56E15CEBB8E1930E8F711CB6E01D5D14967D7E6C1BDDDE2C4D00384EF4CB02877DECC20F239E2668EBC1E9C1CB2D0B539164A3686BE1B08BEB1A6B22E764B93EA1B161568BF95824203A9D16B4A70AB75A8A824B5D2811B0A87135FC8B53D85092B99155863D80879E2DAF218398D6C9BC803CCA907389683DF03732F73F506613DD5426B47170FE721CDFB4395EAA670460F2EDF7950E8192BF3DFE54046B9F66B184BFB8292146F88A4938C46D51C3E491380B279DC2BB949B7EF5D03077AA2092F85A3270B0AE33C8B0D37D963A25274E61BE1BDF5F2932F2CC75D3979416D4142C2253A2744D89FC1C36F23D25B4FB5187BAB7A75DD91B71985CF03F3FDCD53DF617EC008D7D16FBF71FBB1447D2B49EFA2420924FD55E08F3FC11D34A26E6873B491E6B18AADC11CF5ECE04A2A87FF454E6B855288770921600104E931FEB80F7532C11E9115DF456EAFFB782E5721FA112E80FB3211352B9B66DE02E498D942CBE0F4B8EC79ED566099C394BAD6CA875CB63CA548E82060A0C50429CCA65211EEACA801F82C0E808941E5DA37985FA11894B5F3B2F227D6280CB00C3CFC47013862F5A1249A5E20FD787EF40F4E1F6361E4AF7BD1D0F4B230CC6F53DAAE5AC45E1C0A7E9B2C1DA70E73C2A7A0D2A4CD8A6957E9818534BA939E95CF932770A71766E2955E4FE8954056DA851AB23F3FE58DF3C97E77F63066D91D60342749449B42C394357918828270985FFC96D6240A3145E3B2452A12FFFFC41291A4EBE4387E44B942B5506E2BC47A98CFC2E90C99CC5FD18FC4BABD94C40EAAC345B6F701262DA6610F491F8A8C3A796E0C46491C75BBC2F022B3AB63EAD15D9A4F46D06BF757D85D3651A8D53F4DF41D4CADDABA30CFED3DEC104F44DD7413075D974A7D1D21769163012E9B747E4F028149230904E28C42C84E075940EBE656FF22DC26E3D2EE8DA193BB7E6AE1D97157ABE80D8093BF39A2F8B1B263136CB7917DFC04D5F583A5430045B37A4EE63625DF361A6DCB57D1CBF41D9D80B4A0801F09EDE5C4B4403E838B1F7A27302FF6FDB9BB684878730841842E51C5473F6E218354AEDF59A3D8320FF71082B5BAE7A5A60D8C042D96EDFC6F71978B9C73C5F5DD65BC5DD82C472046AE3631AEA25B3A532A42DA142CCF4F9709FF5A2E14122D560F291DC0AF0AF46AF40AEF50B5D1878145D159F1372FEBEBA0136364A39A5BBB4AC4DBB90DA8E7FFD065CA791861476C87F82385382A7FA5A82F839F0F5F846A50A743D218E1F769665A12FBD3F7E870E59084128064D316475FCA8EA54C391D4177F7FC9E34178D78286997BB2FC29833E51E20BBD00201F305434048D79BF097C40736D26E5F19EA7E9A3FB838CD13A540E7FAF937FD9EBD76C39A7B4708FC3C6CA395B4914E17C3E1FD9686C37E4F51AFE1A0EF8272872A34E0B90836CC92E59E09B29D7D481D7C1618A97D2C152FB7787D697D3153D7F5489C2C4DD27A01E07F48550F2BE8EE5AE645ECEE5D92A6DDAC126E8825EA42D3D788D2C254688DEAC8656FCB29E858B0AFD3824CB0B13CB9AB2A534F70EBCEA174832B17FEF5779F4CE3897C8CA04375DECAB1C4103A71DBE65DFE16E880553D78EFAD447F4B6AA76D1711AE38A8B8C50B251D3148382BFE41976C816F3044F901289DF4956D7642A01BA30D2D17431B4F0415D4857BFE1019CD939E7C50C2C64497FC81C4CE720107B6E150F466C4C1A7776ACFEC3D83DE2E69FB03607904B648CE44A4B14740A151346CFD67D403C4123F08A2AD192F94848ECC3865638A1AF0E2D15B3C9837E8B4F34A2B790151F91DB8A8FE36A02A34569EC3740E9911F692C309C5737F2A06053D61BE320330C74686851F2D42E07FE940F8D8CE0F09E9132FBF0ECDF50CDFB3CA3A9782276274A84068C67782C8262B04E1F92A7CD69830C5C34D10AE4D222602875105110AB3D9EF6FBFDDD8D94B70B6DCB205368E8B9667EB90BAE0F681F0217E22118EF5F81FF93AB9D666A5302975928DB359F34553B877B0B7E201419F724153675CF1B6008102BB4621FA4D4DD6C7C3828AD5D74BAE1BE5DABC4710869265726AE8E1807415B78EE16DC0856668E13067146CE695A292C440C5593173AE7BD1F1C1B6DF0ED1A351BE038AB710622BCD08BD407FA2BBE03534C1D55F2AA34B4C032B738640E1945C412DD2AA6957B7639B61EC4087C35E747FCA2692747842347BC46CBACE4E3605B38891E3C69A9338D2C93111FC69F4D09FE724A35B92C801A2DD6420774F064C9C2EEBA52CB63820F06A9858B3D30F92E25937C40B351709B48714C1ADFE350BB8A9AF00725B591CC4E83567E4335FC884EF71D460DFA662A2FED9CCD78AB954274A1BBE84D8D805FA3C15BFC85862AFFF90A328C9B0DD6A0109911D1F319B63B94396B6942BC1A731BD91F25F78093E5FE8D3FBD117A3C00880010C31DCF06A327B06AC361C586D15004CB6F4CB3FFAB12CAA2B9B9FBDFC291A1F92AF1A0C4A679102C52C2B16BA3530D40D00C4C2858897BDA3F378551D0D67A6CC7BE1C29BFB7B25A82EDAE772E0AC0CAFA18695347C40FDAA2DDD559DC02390FB3611DB9C1786599E2E0C23793BEE8C613ACE7A0E08899FBA0E9B6C94EC0933663AC13537DFF23A8430FC8DAF887B6C8A7117E011462968323F1E6C722B36B8D9A9B5F17ECA0921C312C7AA3B5054784AA85391661BEE7108D33AB4C2C56C301A77A8442D59D5B10E7B0155FDD0D4D88906E04DD1F3CFF832B58A26494C683422861528299F51A625FB7D9DF8DFD4F05EFEFBC401ABF08E6F9D670270606C022316EFE3F60360DF58AD66630075D16A522A77BE143644A8CD6582CE3319206DBE37B49DCB27CFE552F90457B873E26D6A511930B602D9417611BFF4B7E14FA6006511F30C1AA6C5AF66DAC4E481A24CA07E15F6A1201067333B56903663CD7AA776C70BCBEF39C283E4D73137540049DFC7E606BB95BAB7445867286CE4286E5F82661AE7C262F9CC6A22E337F881AE2B4055D691325361303402604AA32BD9685D118AF25D9727BC0CFB8FA111E9A67B7E0EBBAA0B005737643537F076C5ECC9D1CBDF5A66F2E3FE4BAD0BFD17806EEF065F47FA30EA730C6A6A365FA7382ECE5A017714E69FC9A7B6F76BE44FFB4C98AC8F38FB6D1F1A29289E946EA2E031FCDE59C15D8F2481B0407BDF5401661A45082F80681191A66DA3DBCBD50D26F438C79B4C84173899E1FED96FA60C564B9C39F1ABC753446C0ED2C6E9312E6952AD9EF236A6C3F5CDA6B31CA85B6DF061BC01DB39FE50420D2916F2CAF8592F97401618E2C0FBB4D6B04F5AE011285D08130F75A1E2E583F25D4D18E2E1BBE4C5BAB75F122E69711754023E1F4A95202FEBFADA2F765EB3F6EB19A9E8799F707918479997D346EEFAD06119786E27FC42802FA0D03CE6C6257EB648B1EFA36D14AFC1AA4925CC91D9BE39A01A3A214839D1B7A2AC3729D6955CB2A327F807C1C98EC0392CBEBFD83B37E0A2C8658ADDC857707E8DA2E8F177C4CB495EA060B4285C3B9C1E14E4F5DDDF62527C0D9CA76EA184D691E2B4C33427BFAD2F16230A69F62BCECBA28869394AAA7F8287F34EDB39D3FEE24FC23F367928252CACDD57A8296F523B00610B10AC6AEC6791574C768C77D877407ECB566DFACC996335A8175A8FEBAE89653FD0F4A79C48F1BA0D67A73747527E68C33ECDAD22EDAC7AF26B7FFEC3FC721273D55D3190B199FACE5730EAD7180BE744910557746403CC223468767C2E45EDE536FE98B3F056F99C38DA5E4A8E5F535DE1BB978699AF8A930FC017C552FADE0CE8B905D731FB27D06DA80322373B5EFE62B10C1625EF53878D646F928A975B4A9F4677F3A82FDFAE6FF72CD4EE9A049AB15B38C984B9A269014DBC8C332B53059EED9CFAC9AC21CC57EECE263BF5E05AA0DEA14F812C6FDFB6B940E0EFB479C9637BC920717A59D0F71F79A1E1AB8DFCA842C57448642AD1DDE28E8482A12E1D2633EF3AC9235EA1F9A7FC0D122689713AA1D19C4A1B5541C447A4A6DCD062EFF6946D313FCBACB1419173F75875851467B26119EC41133ABCB9001D368C960CB8ACC4D6DD05D130A54AB17ED8A4AEF718978AE169EF066B08F197956B274A83BF15CF9CE42F57249B15EE593DB4C6373B0CD7C843A786767567B540703BD432E1BE354CBFCC1F9B596386F8220246908AAA2358F9A78653581921B4D07BAACA2FEAD28F04E68404710E32804F7123D52B2C6B47EDAF61159BB64739D5A18C2D74ECFB602567F8E62327E2BB22D8C2181EFE19C0FA5D3A58991A14A906397D70F9AAD0B65D81E83AEF3EDE58A2FF42D70A15EFFE5DC38770603166A7A5BD559D1C2D5A85944868363D7F303FBF1C4CD2F313375F3BC017E949ECCFA1D479A7D0A49B7F036DE807FD1A1EFBDA4BA50C7965D0E48D48FFC242BA875617ABA1B521E8C31F09119ABDA9E2677E983A9F258775A41B9D648D1D8223CB4E35A4721DB8EF1CFBD68FEC0DD0792CE64B26D176AF1165B161AECF926A1E238E5CB9FAD18BE6D99AA26A0F9181E5C2AB9D57B98177D4C13A9972B1A51FDE9BE5716BD8A6A0B342C11B47438F84C10A38C18DA3BD88C9CB30C85D22B6A2DE2A2DB8C6EB70C82408DCB29676468A8D32B23873A4D72A1221C398BA53106F0926D3772995B63941D1F515ABA9BB30917AB01156F235C96D904B46DB4A96EA7E7C80CC406E9322889618FAC26D73ADD1B1C00E03050A055922F3E50EABD5D0B7B8CFC912837E5A995D752C56E981BACBD30394074953BBD741DEA46C61BD309353D3D89B90BA86A980BBCAB789421E53A31EC904ED43DA612EA1E2AA774B9939DDAC4C714813E0BA31DAA61C9C860BB495D5F8A4503C1A490CF6CE074E19CA1E42E4F8284CD3B63AF8E7FCFA6462D5710304946A12EBD4F9D92ACA01E381D5449D34E5C87E09FFD717B8121D198FAD0464F18F20409E111380E50162B9DC31C97DD6438BFC2CB1E6DB20C1BB84F3DC102014C48B42389941AA800C7738BE0925C83CDB6109D5FE1C0371FEAA4775AC47C4DF788DDA0AD671780599C812F720FBA8DEE3974B4CF0636FBE8BB9A894B2AB3A2DB02A377152B9AACFD629D79847E30A11DC6FE32F18342DEB3F06A5C3EFB3625E0E8C959F7142EFE0CFC8121FC31C04322EE6F99B2587DBD6621300FC22E9295EF680C46A9CBE5E4AD49FC8D10ABC8F04787F0744D48AE127E638C120B6D0BD1BD99AE9D629584D02EA74C0F26B03D2C99FDEEB230909098C7D74124FA3BE0437A4A46AAB13EAEDAD918D5F0F420F210F39739B94FD1B78B4421C1B4306B819537DB6FC69700A95FB91100F2765E2F004E42E3960837AA4DC4ED770CB3E35643D580A68D8AAF5882189A18FFD9CE168C1465E57D04962DA3C8A71C16FC3834B8F3822A8D1A1F1BD4FDE7FB80D1FFB09DB03943AC52195E1135868F9A753C702F5ED50F2A3C9B23DB5A910949760B2F794E6D53F7CCA3B0D1C57518F91750F43892DE8EC7EC949F844C3D39CB8421B88381CFBDB312885DDEBB1EC09AADC9E296870EBCABF243757E6EEAD5CCCA9C09771E49FFF6A0332480645A09EB951455DE2901F5D62CFBDB88C11A5391A64BB1D216053B93D490DC4937AB11867A478147407E7F04A8DD8422FB94908923C0025D0B55090EE04314C09063D4BD8BFCCA4D8CE23D722D22D9A3BC20DAA098896314DB567844E8514185A34567166C136BD8B0028B86184FAF04D9898CD4C3390B10E07EB3B121144A39933ECBD7A6956DDD2D77888CE6046418873B191229CA8716F1E73249A00C1C5AFC859DED5CE31FB0058EBDC557BDEB21378719AECD4E3DD0D00FE37ECD1F19355590BDC2F15965E1CFF36F43C656350ABAD993F2815825B126B5044F0B384BCB8E54961FF2511A69E0AD3712F9B275A184FFD2E81A0FAF4561607797E969AEEF7B7AD4B3A3975027CB3368603CF287279BB06A20435FD1D2F5DC29034DFAABE64146539869D43F8A18E1ECF48934A158A6AE00410D95425902D95BC79CB5F9F2E9E62D99392756DB97E666E25CD3872B0A415DE551AE34A6312D07C2718D800F0513AB47B4C693286F6519FAFE367C4E2C774B02B06A31B67D93D7EBE78B38E3F7399BD0AACC49517D670C6CFA01961920D4CD75B5C104D5532A99C242341407E7B232F6FCC56BC04E5B43AB9E2104468437D33D20488B0B610991075475D9039C66A5D1FA1EC691FE99F93DE9B80A6253CC5A666ADFBAD540523D95EC9C4E4EDFF84758AC2081A73D4AC4E791F4074F911153244F47360F9E92CF9CBC3837A7485FF9CF145AE6AB50199FAA54883E3D7BDF8EECD5D3E03154EE9A123B77E3017FE24CC5EB5AD6E8B78942F3E1EA56A8179D7220830A888E84A3C2C5606E804E7123EBB09F2376137C4BAD75A1A7D9B6584FDBCE2725CD89A826BACEFFB93BF8C123C1981E37D75FEA0D21077DD51C0CE73E62FD638530E4C0D69824085D8949F2FC30044B16D41858C9DC469D61FC698F59C4B1A24379CBDB22649BFDAB19F8C4E808EC561FC27C2FE08D6962D934B37F3AB5B85D766B627F492136F1B514380107A04E9F43667B79E809F5F38C367FE08548D733FBECB1CFE7EF398F433F533172572BCD9E9B6AAF63DB32FDECE5547F3F0FB8207938756959445842B599EE30047F397572D5F978E0273B3F483087DA98C9D1555076F312278CBE2276D9B04D9959B4266EBAFE2B07C12A28AE03BE5B98D06A786EA9EC51476CA2503B53014DB017F584C744E48851BBC642357C5F87531A1F3EE61C5D737D946092D5DCD056F536A5E51BC6A88A108F398422826A2BBCFE12E312EB7BE308452AB2B454A4B775628D64CCEA8CD80240EAB77D758814EDB71B28403B1E830AB56A39A448F2C87C9F48E78BF84E0D085DA15467B7DCFE25B8A2B93AB33E5B66B1210F9724949FDB20094481FF0E6C2508D5735B892A1F69C0CCAA0F318DE5700AA959FA5CBF0E3B892E6AD52EC32E2CBC44C72F88EED98D97D9F379F6289C6603E4DEFD51E3B7437C2C83E055274986ADC266BCB9B887DF9132B040C1545372DAFEA34066BDBB42CD1F88D526C5FDB4E833EB3AC27B2C43BA2FD23FA7961ED50C0A49169429700B6510D8C251AAFE808D8669F9F3C42DD0FBDE24943B8F08483A59AEA14892254DA5617A13F1450CC467686043B97863FD6FDC1790E1970C78055D8F1E1D3292522528DBD323BD2697F9B1677E247201F889A19DA4B6D555E5B28E9574CB37FC0AFA3334891E5EF4CF5677167D6FA367D0157F5B1D9AE45B988208A373A376219420FBF28D7B8118CEA57169C44987CB1B221E7A83F02FB3076339CB7133CCE4094D2AFE36AFBBFA2140CF69CE9D1D287F692F1D3D32E4C2DF7313E268CA5987A8D8927B56AF09109AF95BFF0513CD6FFD5FA329E2BA3247B8A048E0A97CC9E7A0AD30AA6A4109732C2F8D266944A2C23967FF62BE311750FB08A860C8D02C2B35CC52AC059DA3C728D5C4998B740F700B39C1D4D1E8B0E6A5586B6F41D8D223DED2FA0E84C1BF1919DD14E7A8799DA59E142515648DB282966ADF5EAF4B51EBB96601516C84B1DB44B12A186454BCA55A8CA3408CBA52CE0B1DEBADF7F60AD35A2432A967615CA6A1C869ABF80CD917CA663BB1911A89858C1991191BB265E7E34F2D0D5D9DF9C9F3AA8E6C92D4261499E99B97C5141D2608C7E0044E299C2D2B97569A917D695ED046872425157AAA772B9E62E368AE1404397E7DC32852D8CB30189BB4648531859D38C451B7313D9858B9962AD4854C765BBF466DB5D440F11934C3BF9E6D8D6FCA1F007F38EF017156DE7FFF892A278EAA2E84C62BD167DDC359F26B6A44D28060D19A88D1E59D456CAA580FFE548ED9DAA9401B316F13A866B63979C78B33B810E1C3D7EE21F1286D977C32F8064664DBCFFF9F31C69877EC2E790D0E649047466C97BE2520CC66A6F46E57B5016DDCF3C0033FD29D7D16D10F3B3183457F8B2560704C925630CE819D64F437051456B5CC1AB943E6FCF177F9BC65775E340CBBBAE91862D687CA1D6BBDF7F1EE6A630FEAA7EA29652F30C972045B7D52E9810CFE467B43A530704FD222E0990E5FB4AEB26EF369390CB44A9C9A2F0B9699286AF5AEE47DD3AA8895FBDEC60C1F44267F3384172856EAB89130EE7EC199D4DB969D908D2D0B1F9830A6A52351CDA93CF358AB9FCA3CF6450423424C13A09CDCCF1DB934A2AAFA91D39A7D178EEC182F353EA97A035231CE658C01D5CD67375A1EEE7B2FF621C1A18AF782413CBDCEA9424553A55D3E101265A0C32B5FEBC5138A26C7FCA53E3E2DB9E80908B29AA8ED2B8723DF853EEE3294D32483D069AD645B980AF12B499A41DEB513635282E441C00F6D4D7B7679C21662EFA231E012EAE4931DF15972E1C84BBCE67EFDF5BFC6A17CC75E6FFE28F53FDDDFE04B981B1786E63C42D02D8E778F70C20720029458348934FDE94658F5FD66B6C89382401443704EB19B84AC9AAC072FF6DDADB7A5148EDC38A5F98E1D13358851409FBDE963378771E4BD470CDFC1D2A1C8235B51FC9173820E188FDE83CE0DAFBCFF5165CCAEB62D019C42743AF1721B055B7BA420D34A74A93B77BF70874462D6D15CD95F974403A688F657AFC0CE7B69554058D48A0948219E16B85F62BED854B5F79AFA7D9E07B27F5FC205737158565A1388C1746846E6DD52ACAF645CAF00239A9B8391B8CFD299915665348CF395B1B3299EF4CC9874A5835EBF43364729419CAB94DF07D2572597E7458C8C0FDDBB378817093749DE904A02C09B650D3A8BF1DF87A254CC9611A43BB94E97D5DF2D9D212798047F5F5DEB370985A9E49E893884780F8AB6BD07F3ECC04198940BC34B748015A8E70712927981B0D5558CCB3FB394290FEAFE0A407C7C2BB73D588FC485E2A4F0CC94AB8AB7EAAA910CA76A956F9AFB0CB3838B8B8D9B9F633275DC73231AF9F29C49F3315B9E596B946A293957AFC5C9214F9917F6CFAB627F9CF55E45F7B7A222EBF46B9038CB7AD34F3F7BAC84AF3CFD5B8F9AAC57B2F233F256A1214950B08F8B23FBB76101CAC355906FBB3751F8EBBB4506F9E478DA8C99B6F77583E12B22E7D014E4DB8227CDBF7C5F6D663C0D9EB113746568088A9F427C79CBEDB40997EBF47A9C774F4E857F8D00CE4E6F6CDBBFB85EB73FC2C54547DAE00C4DF23B8063B0BD9F0466D34164E9D2C2400E6F0EB808461CDB66B0F268BCFB558125E98F9966D790875902032EF842ED0F40CA31A8A541CACE173498E9FD80A69FFEC8808887B5CA19F98EFCC57CD60D8F5CA46F9E39F567264649735ED6130EFBC6D8DE9103F9DBAFB782283D0C021BB4F83DBCE6943EA7A99370DDD9C95134A103F928DC7B2419757518C1F0995F5B2E4720060D344DCDFCD758609F627281461ED0337CE0A9BD8CBA214A7F4C4EB46241A196097081659C3C42E072E81EBA2C8397AC51A4840E5EDB7E65321B3E9800100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/PIQNWM+Connection cguidfix
/F3.1/PIQNWM+Connection renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.91887456 0.91887456 0.91887456 sc
q
315 223 811 578 rc
315 801 m
1126 801 l
1126 223 l
315 223 l
315 801 l
h
f
12 w
0 0 0 sc
1 0 0 -1 315 801 cm
0 0 m
811 0 l
811 578 l
0 578 l
0 0 l
h
S
Q
6 w
2 J
0 0 0 sc
q
0 0 1440 1024 rc
1 0 0 -1 318 757 cm
0 1 m
804 1 l
S
0 -1 -1 0 1082 756 cm
0 1 m
488 1 l
S
1 0 0 -1 318 269 cm
0 1 m
804 1 l
S
1 0 0 -1 771 712 cm
/F1.1[ 20 0 0 -20 0 0]sf
0 21 m
(!"#$%&'\($%$\)&$%#*+,-&\)./\)%)[ 9.648438 10.966797 4.980469 8.115234 6.171875 5.644531 11.992188 11.972656 8.115234 6.171875 8.115234 11.240234 5.468750 8.115234 6.171875 4.980469 16.064453 11.992188 12.021484 8.203125 5.644531 11.064453 10.966797 9.531250 11.064453 0.000000 ] xS
0 47 m
(,0%1,2-%/,.&\).&)[ 12.021484 5.937500 6.171875 10.488281 12.021484 10.898438 7.480469 6.171875 9.531250 12.021484 10.966797 5.644531 11.064453 10.966797 0.000000 ] xS
1 0 0 -1 438 534 cm
/F2.1[ 20 0 0 -20 0 0]sf
0 21 m
(!"#$%&'\(\)*$)[ 13.340000 14.000000 14.020000 12.940000 6.800000 10.180000 14.020000 20.200000 14.020000 6.100000 0.000000 ] xS
Q
1 1 1 sc
q
438 453 564 45 rc
438 498 m
1002 498 l
1002 453 l
438 453 l
438 498 l
h
f
12 w
0 J
0 0 0 sc
1 0 0 -1 438 498 cm
0 0 m
564 0 l
564 45 l
0 45 l
0 0 l
h
S
Q
0 0 0 sc
q
0 0 1440 1024 rc
1 0 0 -1 541 490 cm
/F1.1[ 20 0 0 -20 0 0]sf
0 21 m
(3$&-,.\(4!"#$%&\)5&%#$%#*+,-&'.&36$&-,.\(4)[ 12.343750 8.115234 5.468750 7.304688 12.021484 10.966797 11.972656 12.343750 9.648438 10.966797 4.980469 8.115234 6.171875 5.644531 10.683594 11.162109 5.468750 6.171875 4.980469 8.115234 6.171875 4.980469 16.064453 11.992188 12.021484 8.203125 5.644531 11.992188 10.966797 5.468750 12.343750 10.361328 8.115234 5.468750 7.304688 12.021484 10.966797 11.972656 0.000000 ] xS
Q
1 1 1 sc
q
438 594 231 111 rc
438 705 m
669 705 l
669 594 l
438 594 l
438 705 l
h
f
12 w
0 J
0 0 0 sc
1 0 0 -1 438 705 cm
0 0 m
231 0 l
231 111 l
0 111 l
0 0 l
h
S
Q
0 0 0 sc
q
0 0 1440 1024 rc
1 0 0 -1 452 665 cm
/F2.1[ 20 0 0 -20 0 0]sf
0 21 m
(+&,-"./0+1&,-"./0)[ 13.600000 10.460000 7.460000 9.400000 14.000000 13.280000 13.940000 13.600000 13.600000 11.200000 10.460000 7.460000 9.400000 14.000000 13.280000 13.940000 0.000000 ] xS
Q
1 1 1 sc
q
639 339 162 54 rc
639 393 m
801 393 l
801 339 l
639 339 l
639 393 l
h
f
12 w
0 J
0 0 0 sc
1 0 0 -1 639 393 cm
0 0 m
162 0 l
162 54 l
0 54 l
0 0 l
h
S
Q
0 0 0 sc
q
0 0 1440 1024 rc
1 0 0 -1 665 376 cm
/F3.1[ 20 0 0 -20 0 0]sf
0 16 m
(!"#$"%&'\($)[ 12.000000 10.000000 14.000000 10.000000 10.000000 8.000000 12.000000 12.000000 12.000000 0.000000 ] xS
Q
1 1 1 sc
q
438 339 141 54 rc
438 393 m
579 393 l
579 339 l
438 339 l
438 393 l
h
f
12 w
0 J
0 0 0 sc
1 0 0 -1 438 393 cm
0 0 m
141 0 l
141 54 l
0 54 l
0 0 l
h
S
Q
0 0 0 sc
q
0 0 1440 1024 rc
1 0 0 -1 490 377 cm
/F3.1[ 20 0 0 -20 0 0]sf
0 16 m
(\)$*')[ 12.000000 10.000000 4.000000 0.000000 ] xS
Q
1 1 1 sc
q
861 339 141 54 rc
861 393 m
1002 393 l
1002 339 l
861 339 l
861 393 l
h
f
12 w
0 J
0 0 0 sc
1 0 0 -1 861 393 cm
0 0 m
141 0 l
141 54 l
0 54 l
0 0 l
h
S
Q
0 0 0 sc
q
0 0 1440 1024 rc
1 0 0 -1 908 377 cm
/F3.1[ 20 0 0 -20 0 0]sf
0 16 m
(+\(,")[ 12.000000 12.000000 12.000000 0.000000 ] xS
1 0 0 -1 315 188 cm
/F1.1[ 20 0 0 -20 0 0]sf
0 21 m
(#.$+#-\)7%81%-\)&-,%9'/%:;)[ 4.980469 10.966797 8.115234 11.992188 4.980469 7.343750 11.064453 11.992188 6.171875 11.630859 10.869141 6.171875 7.343750 11.240234 5.468750 7.304688 12.021484 6.171875 19.228516 11.992188 9.531250 6.171875 17.871094 0.000000 ] xS
42 0 0 41 1084 167 cm
BI
/Width 126
/Height 123
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/Interpolate true
/DataSource cg_aiproc
ID
JcG9?b5fT_L];r*nc-c4a8^qpJcG9?b5fT_L]<#,YQ3&ML]<#,YQ3&ML]<#,YQ3&ML]<Y>PlTtHoDnI_
Q2d-LPlTtHoDnI_Q2d-LPlTtHoDnI_Q2dHUK)k]HlN$2MT)YD^K)k]HlN$2MT)YD^K)k]HlN$2MT)Y_g
JH4F)i;feUVuM;JgAp14VuN[pJH4F)i;feUVuM;JgAp14VuN[pJH4F)i;feUVuM;JgAp14VuO"$JH53?
n,N"[i;feUYlB7SnGr%XoDmhMVuO"$JH53?n,N"[i;feU\c73\q>f%Fr;bIMYlD96JH5NHeGoIIfDr/U
\c73\q>f%Fr;bIMYlD96PlS5lr;YRQYlD96PlS5lr;YRQYlD96PlS5lr;YRQYlD96ScGklr;Y7H\c95?
ScGklr;Y7H\c95?ScGklr;Y7H\c95?ScJ6Zb5h27oDdVH\c95?ScJ6Zb5h27oDdVH\c95?ScJ6Zb5h27
oDdVH\c95?h#PXup]0d_p]/A7oDdVH\c95?h#PXup]0d_p]/A7oDdVH\c95?h#PXup]0d_p]/A7oDdVH
\c95?joF6;p]0IVp]0.Mp]0=RoDdVH\c95?joF6;p]0IVp]0.Mp]0=RoDdVH\c95?joF6;p]0IVp]0.M
p]0=RoDdVH\c9PHh#P"cp].`%oDd;?_Z.LQh#P"cp].`%oDd;?_Z.LQh#P"cp].`%oDd;?_Z.LQh#P"c
p].`%oDd;?_Z.LQh#P"cp].`%oDd;?_Z.LQh#P"cp].`%oDd;?_Z.LQh#P"cp].`%oDd;?_Z.LQh#P"c
p].`%oDd;?_Z.LQh#P"cp].`%oDd;?_Z.LQh#P"cp].`%oDdVH\c9PHh#P"cp].`%oDdVH\c9PHh#P"c
p].`%oDdVH\c95?h#P=lp].`%oDdqQYlD96h#P=lp].`%oDdqQYlD96h#P=lp].`%oDdqQYlD96h#P=l
p].`%oDdqQYlD96h#P=lp].`%oDdqQYlD96h#P=lp].`%oDdqQYlCs-joE9up]0IVp]0"Ir;YmZVuO"$
joE9up]0IVp]0"Ir;YmZVuO"$joE9up]0IVp]0"Ir;YmZVuO"$h#P=ljoEp2r;bdVVuO"$h#P=ljoEp2
r;bdVVuO"$h#P=ljoEp2r;bdVVuN[pjoBu4qZ$Kol2[FUVuPlZJcGTHr;c*_T)Y_gjoBu4qZ$Kol2[FU
T)[pQKE(lMo)P'UT)[pQKE(lMo)P'UT)[pQKE(lMo)P'UN;r>H\c;*un,N"[o)P'UN;r>H\c;*un,N"[
o)P'UN;r>H\c;*un,N"[o)P'UN;r>Hk5WU)k5Y&RquD]UN;r>Hk5WU)k5Y&RquD]UN;r>Hk5WU)k5Y&R
quD]UKE(B?VuQ&_quD]UKE(B?VuQ&_quD]UKE(B?VuQ&_quD]UKE('6\c:Xho)P'UKE('6\c:Xho)P'U
KE('6\c:Xho)P'UQ2ftHn,MhVh>cpDn,N._rVufqmf8sZQ2ftHn,MhVh>cpDn,N._rVufqmf8sZQ2ftH
n,MhVh>cpDn,N._rVufqmf8sZVuQ2cn,N._h>c:2h>d6MrVuKhmf99cVuQ2cn,N._h>c:2h>d6MrVuKh
mf99cVuQ2cn,N._h>c:2h>d6MrVuKhmf99c\c:dlk5Y2VQ2gUZrVu0_joDsl\c:dlk5Y2VQ2gUZrVu0_
joDsl\c:dlk5Y2VQ2gUZrVu0_joDsl_Z/Elk5Y2VT)\6ZrVu0_h#P=l_Z/Elk5Y2VT)\6ZrVu0_h#P=l
_Z/Elk5Y2VT)\6ZrVu0_h#P=leGmAck5XlM\c;*uo`+O_b5f`ceGmAck5XlM\c;*uo`+O_b5f`ceGmAc
k5XlM\c;*uo`+O_b5f`cn,K9ch>d6M\c;*uo`+O_\H(Icn,K9ch>d6M\c;*uo`+O_\H(Icn,K9ch>d6M
\c;*uo`+O_\H(Icq#?TZh>cpDh>cU;li6n_ScJ6Zq#?TZh>cpDh>cU;li6n_ScJ6Zq#?TZh>cpDh>cU;
li6n_ScJ6ZK)ja-b5gAur;_oZq#>sHh>bXuh>dERO9#(UK)ja-b5gAur;_oZq#>mFkQ()Oe,\t;lMu\?
JH4m6n,Ll;n,M\RLB)l*kQ()Oe,\t;lMu\?JH16$LB)l*JH1H*JH16$LB)l*JH1H*JH16$LB)l*JH1H*
JcF=$e,\2%L];r*f)O5"g&Hj-JcF=$e,\2%L];r*f)O5"g&Hj-JcF=$e,\2%L];r*f)O5"g&Hj-JcF!p
joEd.L];r*c2Zo+d/Sn$JcF!pjoEd.L];l
~> %APLeod
EI
ep
end
