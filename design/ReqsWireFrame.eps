%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.15.4 (Build 19E266) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1440 1024
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1440 1024
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: JQZLWZ+Futura-Bold
%!FontType1-1.0: JQZLWZ+Futura-Bold 1.0000.2.0010
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin
/FontName /JQZLWZ+Futura-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /S put
dup 34 /o put
dup 35 /f put
dup 36 /t put
dup 37 /w put
dup 38 /a put
dup 39 /r put
dup 40 /e put
dup 41 /space put
dup 42 /R put
dup 43 /q put
dup 44 /u put
dup 45 /i put
dup 46 /m put
dup 47 /n put
dup 48 /s put
dup 49 /W put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -227 1 index div -344 2 index div 1459 3 index div 1099 5 -1 roll div]cvx def
/sfnts [<


00>] def
/CharStrings 19 dict dup begin
/.notdef 0 def
/space 1 def
/R 2 def
/S 3 def
/W 4 def
/a 5 def
/e 6 def
/f 7 def
/i 8 def
/m 9 def
/n 10 def
/o 11 def
/q 12 def
/r 13 def
/s 14 def
/u 15 def
/w 16 def
/t 17 def
/anoteleia 18 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-227 -344 1459 1099} readonly def
/UniqueID 4364665 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB28299D261F4869FB8C8225AD81CFC6544C589AC24D08455E7AC212C6E8BF4F22FA53C6E021E03ABF6B67C8F18B4E26A7518E835941DEC658EA9BD181B58A45B612DA0DCDDF0068FF072641C4C619F4F1E93266C43D8C28B4C2B1E864A673E14862BD8D24E712AB8000A2CA52C47B122E29F0FCFE4D9F7CCC538407B638BCEA8EFF5904D0E1F7054A06DFA4B9ADB7C0DD296E0CDB41B3655DB167D9FAD1328FEE9AD2AAFF8117CE86365C1C3BBC1EFABB636184D44924B4E24CB7741EBB22BCD8FADBB7A1B327F57A5A796E2A8E5D75465F86D027CFAAD4E5B6752C55C7FA008BF736A94C0317E207CB384CB2C16F58BED264C9FE96214DCC26C14C1D8C4817D926DFA431AEF2F936C5DAA00AC74685DD57327783460F3755E6CBE54BD01FE397E1BC90BB8DEB6A3DF52BFD30577A857C0F733744ADF27777151A3EB384A7E0BFE820D5D781F562362F3AFF475DE8819D204A712B62333497E22080698F2BCC76BB65393BC83AFAF4260A1CCB5C486834512D3F7B5C7EA6EA0115BEFAD2A136E237CD5025151D75EF083C9D690FCD65F2151EBF7717A4BDA6AF21F72751D21F089956AD5310D3EC39065BA21D27D12AF46AC46A057663E795936D88DB04285F9657D44365E85597C5ED85D876645BA599E71D2EE7213E9C5944CE2B37A42D32263E101673D1E64A462DE5DDBA0E245472B02B1949688B36747469097FE03157769A5B93F34136DB001EBF396195CF8EBCF1840F5AA6D0E23DAA096DF9087690A9D854ACDFA


7BB3F21A2A0C5D657EE6AB60E2F8B110E7CA8A16F6369BD760EA97D02DA9515BF957774B94075833D9ECC22FE474E714F71543D953465F1D024882CD3D6F9AA4C080D845482E5BBE782580061372CA28ED4937FB4C3A6D754A3730EF948498FAA41E5123203A8CE213F0903AFF88983FACC4F9807D4E2CB3C0876B949AA0486120E2148E63D6D2C9ADE9D47C1EFA993427CC1EE67615AF3C4F1CF6E7C2C7775453B9C46CCC4727A3853C6466EA15D141BB30FD5C8306C436D6EDD326F2DBB8AE589D9CEE7A9ACF8EF9316728B6A8D274CE5AC2D51F391CC4402DC6E22DFEFECF61FE01970D397EECB4598CB44B319EECB1573BF43796A8086682F099CEE9D534A8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/JQZLWZ+Futura-Bold cguidfix
/F1.1/JQZLWZ+Futura-Bold renmfont
%RBIBeginFontSubset: XELDKO+Futura-Medium
%!FontType1-1.0: XELDKO+Futura-Medium 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
14 dict begin
/FontName /XELDKO+Futura-Medium def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /one put
dup 34 /A put
dup 35 /s put
dup 36 /space put
dup 37 /a put
dup 38 /u put
dup 39 /e put
dup 40 /r put
dup 41 /I put
dup 42 /w put
dup 43 /n put
dup 44 /t put
dup 45 /o put
dup 46 /b put
dup 47 /l put
dup 48 /c put
dup 49 /H put
dup 50 /T put
dup 51 /M put
dup 52 /L put
dup 53 /g put
dup 54 /h put
dup 55 /quoteright put
dup 56 /m put
dup 57 /v put
dup 58 /period put
dup 59 /two put
dup 60 /p put
dup 61 /i put
dup 62 /three put
dup 63 /d put
dup 64 /four put
dup 65 /five put
dup 66 /x put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1074 1 index div -591 2 index div 2707 3 index div 2164 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 37 dict dup begin
/.notdef 0 def
/space 1 def
/quoteright 2 def
/hyphen 3 def
/period 4 def
/one 5 def
/two 6 def
/three 7 def
/four 8 def
/five 9 def
/A 10 def
/H 11 def
/I 12 def
/L 13 def
/M 14 def
/T 15 def
/a 16 def
/b 17 def
/c 18 def
/d 19 def
/e 20 def
/g 21 def
/h 22 def
/i 23 def
/l 24 def
/m 25 def
/n 26 def
/o 27 def
/p 28 def
/r 29 def
/s 30 def
/t 31 def
/u 32 def
/v 33 def
/w 34 def
/x 35 def
/hbar 36 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-1074 -591 2707 2164} readonly def
/UniqueID 4208071 def
currentdict end
currentfile eexec

DD171E66D5B508F2946CA0BDE9FD8E8C9525DD9F12F2A29352894081D9A92FE3EA2D1FFD594444332C0F47CD6C70418C3D4CCAF4F4944DFC1A515AEC455D571E25526E3823699AFCA715E402F97C18AFBBE6C71D4542406B6E72A909552D1922BECD578FA5A21CFE871DDB65AA1F2ED5F8262F3FFF3ED29DD7E69E2903B29BC328C62833D7CFE906F2010E4C4AF63ED02BECDF69B43C06EABDF5945CC1702B60DF1B003B19401D64261A0FE34B8816EA7FF0057234BA02C02D1AFF1A6210EF5E56861C9ED1A46490DAEA2400EABDCF5C74F9D3DF5F4BAF0312CABC50A859BB6906AEDAE291A49968142D8D1BD299841F8B280DDE3B58A7CF9791E046800EDF3B65D88482DD0A89EDE613930021C1E3AB378ED1715A6AA67A8DAE03CB4D743E3EA786A5D5134D0F1848C9526FFE51E64F9095CF1F12535135E1119E4389ADF5020C44EE6D35A50B926FF56801452AEED494A5DCBD2FCAE1F8B2B5B89841C0A11990F70120D3DA9ACB579BAF17E85AA06813309C062D8C3D80173A59885AB687396067C79E3CFFC406CE589942CD8F4C954A8D1A0F2782B4A0EB8B59AE75254F616636DFEA4B0E192A9DCDCD300B40B91A3CB04CA96F12FC37BF8AA53E420F0392419A3820060E6B74DCC8059F754574DA0681A2F9557AF6DFD5959A0001F3990FC7172168E4C776B902A4CBF167EDD0E6D4AA086AFDA26555000414176DEF331A5CC6C17C532A48331292F84951EB701179D60ED9EBA87A17A99268E316BFD3092D77E24ECCE6AE5D74615597F43897219F84D7DAD07964C317B31BB610C1985C1F34E7D5985C1366C6857933ABBD4AC7A831B68892862C4312671CDD3C3DFB5DA7CDB9F886A846EA750C93831BC9D2C926AE1A3063946372C31D0A2DC74A4464BF631A8EEA111DE740BDCFB8126E5315167D19ED75A9F1A8FAB7F3258D6BDCABA1C66783E84423DC6056DFA9E7C29BC5A41EB0CBC878EC47871D61AD15F75F9CB5CA39BA5EAC969A0F4CDB32A3896ADCBAD3A4D587C411A4A90EAE0C1F87218EA56A7F23A388BED2100C516345DE38D1797E78E05F3B40481E1637E2FF788ADB019C896E0A501432C8A46F877635B534F5FAF43D3E7B01497516933728137D6EF4F726B632FE0BA6E7878DD68EDF21888D71022E1B2BF226A7BE511662D9F89D55B9D7AEB06FAF2EC1B21FDBEC06A7537F617E83427B591A1FE0112E929369E7047DCB6F8AF003A80FAE22348D7BCCAF3EBB6BB588214063A94C63A36CB4CA04706E1578EF14D5007FA8B679EA4AB5A350C8C0546E5FFFDBF925159504484F5A4F9F42636CF119A294CED375F3F2121871A40FCD603606DDA1692A1754D7321D485D8478D90D38030336BB014CDA02E8DD990D285A749F29F90799007F52B60463AFEE3B4D07BF79C76D408F528B7F42882C460006E84C4BB6BA2F4B72725430
62067AB0BF75D2AB017BE4646ED43B7B2B0975294B9D6C738766F17F6DD434F756D60004A12A2B8EA0F7FFDEBF2601BB8D915C846896AF0D85CAC9818A658E6EFF67E91FABC8F3CB28060D936B4DC002D16BC2D12F2D2BBB43F45A37997B1A61BF57856278564151589CFC4638B0F5441ABB90B29755C3DB2F437A84E48B54D382DEE01119CE77B2515D13820292EFF61084ED622C6BFEFBBBAC544FC4C1CB5001B112E0040ECBC42670858582CF4BB9ADF860602B8443D3604218BA15F0D6D6F56F567F9C7366C1342B64CB7F85FF25F21D8D3B9EC15DE4C70C767291DD06F04C061D1024A51598DE77A4709E2C3B1C9B9113C2D7FD008024F9D936E9D48BA55EBADE0D01A7A1C828EB3A708D9D8325BD87075E55B759169B2DAD894241CDBD7B50CCFB25D937CA16479ECB8B9922CAEA5E8F1FF11E1ABDE4D6F548097A8011C1EFA8F20C55AE32DAF5951DE232493B0D61349822E540A4F2999A198B2A725C67AA376D2314F8B8962F2EC95CDC5D237147E78736020B6E4B66B86BE2F005C06FA5DDBA2C924292AD997FD9B5A33956F618AC1716F65FB614AB714F37422E8C0EBA80396BE0E160B6DCAC4DCA929D2388EFD08A9075DF6B6BFC6669B18BD6E15883C80737B401E9A92E9DEC9975DCDAF2E607835E62CF4BA7832DA1146D7A9FF839BEE0B05E2E165CC919B8CA2646BCB752347DF65582F5E3FE3FF6394B99FFE6D1CED76D76329414F7F2D7820697E4B3529005BC0F8C9913A8EFB0AC4D810A25517B95BD7145B2288E35D4072DA7C9490E435186E345AE9095EA4FFBAE99AB03F8A77ED64B60D656AE30A7BBCA75BC954A78744BAFEBF028CEF663700ABED02914DA38550086D8E1D22BE702EBE9A126CFAD39962906C10780FA8F725B1A3A24FA655B8DA64CCF793B2D057905B3E175CCF7023BDE73975847F152AFF877F69F008557E4AF2C03D46F278D2ECACD0A622CA240E5053367553AF9534E7729F26333FADF8EF164146FAD3186740270521FCDC9AFB38C671A53E2E1219CA6A3767EA143DA5F8C1D1F51A4580E2854960EE43FD942CC791BBA7C8A53240D785B6B33BDD0402C47E610F8614825D673AF636B8D97E620F99DCE295FCD29B4D60CAEC47D08017CF15C2905540963260829E1594C2F398921DE864651D230DDE64B14C82B82333B2BC6B3356B5FD502ADBC2C3F26F15BE583D93F9F552FDB2D5EFE9883637CEDC8731A13378E7B2A675086A8F0D4D8E0AFB9865505FEFB724E6841A8906B99A58293EAB6103CEB15B4DDAF62BB986BDC823BAB115085A510E862E1A5CFF76CE50A62BB724553F971526AB153F7E83288EA88556082A22609AA3C1F46BD0A86AAA7FCA6E98DF6C8BE2A9658EF65DDC9CCBDBF4F8A8048317B39A8E9A600E1CFEE4A4F8E764F5BEBB6B5656AC5A9A1DDB8CE1F73E628574136CE01F10E

CE350D7DFAE35F348F6AFEA896E792B9B13990CB18C7EAAF474EFA77DB6CB570AE8B8281C5866405394BFCB8AD1852FE2B41EF83B22F6DBF69AAA1CCB70DC4FE821484CADFC104015AB575AAA9F77AF4E89D544C39EC9E30854862FD02D6C4522F639ADCB7054C92FF5E346CF49217164010F16D03B57388C13C5E0C4B85EEFC0ED4B9C1B6EDCDC81CCEC8470AF8A19CFCA8D7DBA73F4B97E0FE7E9DEB426146B321DCBC0B1F9E5E5C3830224E195CB200FFE306F8405E194FCF2E73468563EC010F9E2833C4721D61764AA953BF91C090F67B184A3EB9A1DF3F01321E3CCC1CE16BD7D452122EC93A81DFFCF55A823B697B2D572F3B74FB0F83529080096AEC9390F34B6660EC04BD9E8B7859103245B3819CB4F3D59DCC784068C90F1EAF6956823A39BE61F96AC2AD1F7D9D658C672B848B96B49458489C12E91780937B23DE61F7A240D463A17EF139696F0DEB48BC35EDCC68C5EC883A3C487C3D578154740639C2800BEBECDB49
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/XELDKO+Futura-Medium cguidfix
/F2.1/XELDKO+Futura-Medium renmfont
%RBIBeginFontSubset: UCSBIU+LucidaGrande-Bold
%!FontType1-1.0: UCSBIU+LucidaGrande-Bold 1.0000.1.0020
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin
/FontName /UCSBIU+LucidaGrande-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /period put
dup 34 /space put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -2224 1 index div -901 2 index div 3552 3 index div 2394 5 -1 roll div]cvx def
/sfnts [<

01370128011C0116010C0108010300F800EC00E400D700C600B900900084007800700000016E0141012E01280120011B01100104010200F900F700F000BE009A009000840078007001410000002B00560000FFD5FFAA01250027000000C50000000000000000000000000000000000000000000000000000000000000000000000000000056600190000044A0019000000000800010300D10000040000000000000005D5001900000000FFE700000000FFF40000000000000000FEF10000000000B600B600FA00E000EF00CE011000B6018C00F700C500C200B3008C0128008C009A007B006200F30101FE0003C200C60050005000000000000000000000000000000000000000000000000000000000051C054100000000000000000000000000000000007B00940128012800B9006F001900DE01CD011000000000000000000000000000000000000000000094009400DE0000000000000000000000000000065001D500AD000000000000000000000000000000C1010001A0012800000000000000000000000000AC0000000000000000000000000000000000000094037800F4004A00000000000000000000000000E4007B00D102B7008B00910082006E00000000006F04A004B900AD002A002A002A002A40405249483C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A090807060504030201002C0118B0184358456AB0194360B00C2344231020B00C4EF04D2FB000121B21231120332F592D2C0118B0184358B0052BB000134BB0145058B100403859B0062B1B21231120332F592D2C0118B01843584EB0032510F221B000124D1B2045B00425B00425234A6164B0285258212310D61BB0032510F221B0001259592D2CB01A435821211BB00225B0022549B00325B003254A612064B01050582121211BB00325B0032549B0005058B0005058B8FFE238211BB0003821591BB0005258B01E38211BB0003821595959592D2C0118B0184358B0052BB000134BB0145058B90000FFC03859B0062B1B21231120332F592D2C4E018A10B10C194344B00014B1000CE2B00015B90000FFF03800B0003CB0282BB0022510B0003C2D2C0118B0002FB00114F2B00113B001154DB000122D2C0118B0184358B0052BB00013B90000FFE038B0062B1B21231120332F592D2C0118B018435845646A23456469B01943646060B00C2344231020B00CF02FB000121B2121208A208A525811331B212159592D2C014BB0C85158B10B0A432343650A592D2C004BB0C8515800B10A0B4323430B592D2C00B00C2370B1010C3E01B00C2370B1020C453AB10200080D2D2CB0122BB0022545B00225456AB0408B60B0022523442121212D2CB0132BB0022545B00225456AB8FFC08C60B002

8A11231220392F592D2CB00225B002254964B0C05458B8FFF838B008381B2121592D2CB0134358031B02592D2CB0134358021B03592D2CB00A2B2310203CB0172B2D2CB00225B8FFF038B0282B8A102320D023B0102BB0054358C01B3C59201011B00012012D2C4B53234B515A58381B2121592D2C01B0022510D023C901B00113B0001410B0013CB001162D2C01B00013B001B0032549B0031738B001132D2C4B53234B515A5820458A60441B2121592D2C184B5358B00425B004254964B00325B00325496468B0408B6120B080626AB00225B00225618CB00C234421B004251023B00CF61BB00425B0042511122320392F59CC21212D2C0118B0184358B0052546234564611B21B00425B004254A59B00E23442310B00EEC2310B00EEC2D2CB01B435820B0016045B000515820B0016020452068B0005558B0206044211B212121591B20B0016020452068B0005558B8FFE06044B01C4B50582045B02060441B21591B21212159591B21592D2C4B53234B515A58381B2121592D2C4B5458381B2121592D2C4B52587D1B7A592DB800532C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800542C2020456944B001602DB800552CB800542A212DB800562C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800572C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800582C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800592C2020456944B001602020457D691844B001602DB8005A2CB800592A2DB8005B2C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB8005C2C4B535845441B2121592DB8005D2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8005E2C2020456944B001602DB8005F2CB8005E2A212DB800602C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800612C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800622C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800632C2020456944B001602020457D691844B001602DB800642CB800632A2DB800652C4B20B003265358B0801BB040598A8A20B003265358B0022621B0C08A8A1B8A235920B0




00>] def
/CharStrings 4 dict dup begin
/.notdef 0 def
/space 1 def
/period 2 def
/ukcyrillic.alt 3 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-2224 -901 3552 2394} readonly def
/UniqueID 4120455 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB2878974AB253FC8F6E50D35D384423D89D255799B15B5BC324012A5406A0E2F3CCA064190EA1A6586F733091134F6DA76EE7A379DF1CA162D45A0C13D629F7912769A2EA2883A47737B04333E3A1127605A7B3263FD7B111E5C3C62D31EA8B4D589490ADE0A65C1B6F883D25CC6C6E02644044FEA00C7D0A176671145AC6E760C6B987D641341A32F23983B2BEA3169AA977E1D87D7F54F9BD4FD296F09116150876FF67E68A4FAECF6E32F9116263DAFE5BC550DA519802286D495814F0C65AEE61A6AA71775EECFA41B7BCAE96A8B862E00F526EF6497A622600F04BA0C4DEC8E46B6E5D754DC6CFBE12CB6E8B3FFBCF6042B94A902C9034A6AED128B060DCB7EFE3C6F15596EBD82A9BA33E339F7320F2CC43D4FD216DD8A6D4E49F4E3EE7990C6038E490D15BBD04BCAED75F60B03D21C3B0D30B34E7C1BFF6E82F6705B19F086B4B832C446AEC8364203B65E60AEA5C6E868B816541D72C33C1C862BC206AEDA42FB8061F23453B00BA098F2A479A38708348101C40857B67E4EEBC263514430684E0C3E1FF368E11DF5A4C3D4339E5DB433D45C1A0394302709763E1A74F29418614AF4CD25A6D3009678950B4D9D1F6F8FDB3567023B36BA6E776D701966FEBAB4AFDDAA69414BC4521711A7F10A3D065F881D2579FA422F5F50ADC86406370E185137B50518B00A0126F97FB33CF238A2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/UCSBIU+LucidaGrande-Bold cguidfix
/F3.1/UCSBIU+LucidaGrande-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0 0 0 sc
0.60000002 i
q
0 0 1440 1024 rc
1 0 0 -1 121 887 cm
/F1.1[ 40 0 0 -40 0 0]sf
0 42 m
(!"#$%&'\(\)*\(+,-'.\(/$0)[ 25.840000 28.000000 16.720000 14.920000 40.000000 28.040000 18.880000 25.880000 13.600000 27.920000 25.880000 28.720000 26.760000 12.200000 18.640000 39.680000 25.880000 26.560000 15.120000 0.000000 ] xS
1 0 0 -1 121 775 cm
/F2.1[ 20 0 0 -20 0 0]sf
0 21 m
(!)s
/F3.1[ 20 0 0 -20 0 0]sf
12.34375 21 m
(!")[ 4.941406 0.000000 ] xS
/F2.1[ 20 0 0 -20 0 0]sf
23.876953 21 m
("#$%$&#'\($\)$*%+,$,-$.'$%./'$,-$#''$0&\(\('+,$1234$,%5$,6%,$)[ 14.814453 8.115234 6.171875 11.992188 6.171875 10.898438 8.115234 11.064453 7.480469 6.171875 5.898438 6.171875 15.156250 11.992188 10.966797 5.468750 6.171875 5.605469 12.021484 6.171875 11.992188 11.064453 6.171875 11.992188 11.992188 4.980469 11.064453 6.171875 5.605469 12.021484 6.171875 8.115234 11.064453 11.064453 6.171875 9.531250 10.898438 7.783203 7.343750 11.064453 10.966797 5.468750 6.171875 14.667969 9.648438 19.228516 8.867188 6.171875 5.644531 11.992188 11.972656 6.171875 5.869141 10.966797 11.992188 5.468750 0.000000 ] xS
0 47 m
(\)78$%.-9'$,-$/'%\(+:)[ 5.898438 6.533203 15.820312 6.171875 11.992188 11.992188 11.621094 9.707031 11.064453 6.171875 5.605469 12.021484 6.171875 4.980469 11.064453 11.992188 7.783203 10.966797 0.000000 ] xS
0 99 m
(;:$"#$%$&#'\($\)$*%+,$,-$.'$%./'$,-$6%9'$-<,=-+$+%9=5%,'$=+$.',*''+)[ 12.343750 6.171875 6.171875 14.814453 8.115234 6.171875 11.992188 6.171875 10.898438 8.115234 11.064453 7.480469 6.171875 5.898438 6.171875 15.156250 11.992188 10.966797 5.468750 6.171875 5.605469 12.021484 6.171875 11.992188 11.064453 6.171875 11.992188 11.992188 4.980469 11.064453 6.171875 5.605469 12.021484 6.171875 10.966797 12.167969 9.707031 11.064453 6.171875 12.021484 12.167969 5.468750 4.980469 12.021484 10.966797 6.171875 10.966797 12.167969 10.048828 4.980469 11.972656 11.992188 5.644531 11.064453 6.171875 4.980469 10.966797 6.171875 11.992188 11.240234 5.468750 15.175781 11.064453 11.064453 0.000000 ] xS
0 125 m
(,%5#$,6%,$\)78$/'%\(+=+5:)[ 5.644531 11.992188 11.972656 8.115234 6.171875 5.869141 10.966797 11.992188 5.468750 6.171875 5.898438 6.533203 15.820312 6.171875 4.980469 11.064453 11.992188 7.783203 10.966797 4.980469 10.966797 11.972656 0.000000 ] xS
0 177 m
(>:$"#$%$&#'\($\)$*%+,$,-$.'$%./'$,-$#''$,%57#$?'#0\(=<,=-+:)[ 12.343750 6.171875 6.171875 14.814453 8.115234 6.171875 11.992188 6.171875 10.898438 8.115234 11.064453 7.480469 6.171875 5.898438 6.171875 15.156250 11.992188 10.966797 5.468750 6.171875 5.605469 12.021484 6.171875 11.992188 11.064453 6.171875 11.992188 11.992188 4.980469 11.064453 6.171875 5.605469 12.021484 6.171875 8.115234 11.064453 11.064453 6.171875 5.644531 11.992188 11.972656 6.533203 8.115234 6.171875 11.992188 11.064453 8.115234 9.531250 7.783203 4.980469 12.167969 5.468750 4.980469 12.021484 10.966797 0.000000 ] xS
0 229 m
(@:$"#$%$&#'\($\)$*%+,$,-$.'$%./'$,-$#''$,%57#$#%8</':)[ 12.343750 6.171875 6.171875 14.814453 8.115234 6.171875 11.992188 6.171875 10.898438 8.115234 11.064453 7.480469 6.171875 5.898438 6.171875 15.156250 11.992188 10.966797 5.468750 6.171875 5.605469 12.021484 6.171875 11.992188 11.064453 6.171875 11.992188 11.992188 4.980469 11.064453 6.171875 5.605469 12.021484 6.171875 8.115234 11.064453 11.064453 6.171875 5.644531 11.992188 11.972656 6.533203 8.115234 6.171875 8.115234 11.992188 16.064453 11.992188 4.980469 11.064453 0.000000 ] xS
0 281 m
(A:$"#$%$&#'\($\)$*%+,$,-$.'$%./'$,-$#,%\(,$-9'\($-+0'$\)$*'+,$,6\(-&56$)[ 12.343750 6.171875 6.171875 14.814453 8.115234 6.171875 11.992188 6.171875 10.898438 8.115234 11.064453 7.480469 6.171875 5.898438 6.171875 15.156250 11.992188 10.966797 5.468750 6.171875 5.605469 12.021484 6.171875 11.992188 11.064453 6.171875 11.992188 11.992188 4.980469 11.064453 6.171875 5.605469 12.021484 6.171875 8.115234 5.644531 11.992188 8.203125 5.468750 6.171875 11.621094 9.707031 11.064453 7.480469 6.171875 12.021484 10.966797 9.531250 11.064453 6.171875 5.898438 6.171875 15.175781 11.064453 10.966797 5.468750 6.171875 5.869141 10.966797 7.304688 12.021484 10.898438 11.972656 10.966797 0.000000 ] xS
0 307 m
(%//$,%5#:$)[ 11.992188 4.980469 4.980469 6.171875 5.644531 11.992188 11.972656 8.115234 6.171875 0.000000 ] xS
0 333 m
($)s
1 0 0 -1 843 887 cm
/F1.1[ 40 0 0 -40 0 0]sf
0 42 m
(1-'\(#'&.\()[ 46.520000 12.200000 18.880000 25.880000 15.640000 18.880000 28.040000 39.680000 0.000000 ] xS
Q
0.45305145 0.48029786 0.53059894 sc
q
843 146 549 644 rc
838 795 m
1397 795 l
1397 141 l
838 141 l
h
f
Q
0.85490197 0.90588236 1 sc
q
1199 363 100 34 rc
1194 402 m
1304 402 l
1304 358 l
1194 358 l
h
f
Q
0.46666667 0.46666667 0.46666667 sc
q
0 0 1440 1024 rc
1 0 0 -1 1230 396 cm
/F2.1[ 20 0 0 -20 0 0]sf
0 21 m
(+'B,)[ 10.966797 10.683594 11.162109 0.000000 ] xS
Q
0.85490197 0.90588236 1 sc
q
1068 363 100 34 rc
1063 402 m
1173 402 l
1173 358 l
1063 358 l
h
f
Q
0.46666667 0.46666667 0.46666667 sc
q
0 0 1440 1024 rc
1 0 0 -1 1075 396 cm
/F2.1[ 20 0 0 -20 0 0]sf
0 21 m
(#,%\(,$-9'\()[ 8.115234 5.644531 11.992188 8.203125 5.468750 6.171875 11.621094 9.707031 11.064453 0.000000 ] xS
Q
0.85490197 0.90588236 1 sc
q
936 363 100 34 rc
931 402 m
1041 402 l
1041 358 l
931 358 l
h
f
Q
0.46666667 0.46666667 0.46666667 sc
q
0 0 1440 1024 rc
1 0 0 -1 966 396 cm
/F2.1[ 20 0 0 -20 0 0]sf
0 21 m
(<\('9)[ 11.992188 7.343750 10.722656 0.000000 ] xS
Q
0.85453504 0.90743142 1 sc
q
940 660 m
1044 660 l
1046.2091 660 1048 658.20917 1048 656 c
1048 552 l
1048 549.79083 1046.2091 548 1044 548 c
940 548 l
937.79083 548 936 549.79083 936 552 c
936 656 l
936 658.20917 937.79083 660 940 660 c
h
W*
0 0 1440 1024 rc
931 665 m
1053 665 l
1053 543 l
931 543 l
h
f
Q
0.46666667 0.46666667 0.46666667 sc
q
0 0 1440 1024 rc
1 0 0 -1 977 617 cm
/F2.1[ 20 0 0 -20 0 0]sf
0 21 m
(,%5)[ 5.644531 11.992188 0.000000 ] xS
Q
0.85490197 0.90588236 1 sc
q
1103 660 m
1295 660 l
1297.2091 660 1299 658.20917 1299 656 c
1299 552 l
1299 549.79083 1297.2091 548 1295 548 c
1103 548 l
1100.7909 548 1099 549.79083 1099 552 c
1099 656 l
1099 658.20917 1100.7909 660 1103 660 c
h
W*
0 0 1440 1024 rc
1094 665 m
1304 665 l
1304 543 l
1094 543 l
h
f
Q
0.46716484 0.46716484 0.46716484 sc
q
0 0 1440 1024 rc
1 0 0 -1 1149 617 cm
/F2.1[ 20 0 0 -20 0 0]sf
0 21 m
(?'#0\(=<,=-+)[ 11.992188 11.064453 8.115234 9.531250 7.783203 4.980469 12.167969 5.468750 4.980469 12.021484 0.000000 ] xS
Q
0.85490197 0.90588236 1 sc
q
940 501 m
1295 501 l
1297.2091 501 1299 499.20914 1299 497 c
1299 461 l
1299 458.79086 1297.2091 457 1295 457 c
940 457 l
937.79083 457 936 458.79086 936 461 c
936 497 l
936 499.20914 937.79083 501 940 501 c
h
W*
0 0 1440 1024 rc
931 506 m
1304 506 l
1304 452 l
931 452 l
h
f
Q
0.46666667 0.46666667 0.46666667 sc
q
0 0 1440 1024 rc
1 0 0 -1 1085 492 cm
/F2.1[ 20 0 0 -20 0 0]sf
0 21 m
(#%8</')[ 8.115234 11.992188 16.064453 11.992188 4.980469 0.000000 ] xS
ep
end
